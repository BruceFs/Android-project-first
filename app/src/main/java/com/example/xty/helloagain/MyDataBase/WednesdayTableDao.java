package com.example.xty.helloagain.MyDataBase;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;
import org.greenrobot.greendao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "WEDNESDAY_TABLE".
*/
public class WednesdayTableDao extends AbstractDao<WednesdayTable, Long> {

    public static final String TABLENAME = "WEDNESDAY_TABLE";

    /**
     * Properties of entity WednesdayTable.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property WeekNumber = new Property(1, int.class, "weekNumber", false, "weekNumber");
        public final static Property FirstClass = new Property(2, String.class, "firstClass", false, "firstClass");
        public final static Property SencondClass = new Property(3, String.class, "sencondClass", false, "secondClass");
        public final static Property ThirdClass = new Property(4, String.class, "thirdClass", false, "thirdClass");
        public final static Property FourthClass = new Property(5, String.class, "fourthClass", false, "fourthClass");
        public final static Property FifthClass = new Property(6, String.class, "fifthClass", false, "fifthClass");
        public final static Property SixthClass = new Property(7, String.class, "sixthClass", false, "sixthClass");
        public final static Property SeventhClass = new Property(8, String.class, "seventhClass", false, "seventhClass");
        public final static Property EighthClass = new Property(9, String.class, "eighthClass", false, "eighthClass");
        public final static Property NinthClass = new Property(10, String.class, "ninthClass", false, "ninthClass");
        public final static Property TenthClass = new Property(11, String.class, "tenthClass", false, "tenthClass");
        public final static Property EleventhClasss = new Property(12, String.class, "eleventhClasss", false, "eleventhClasss");
        public final static Property TwelfthClass = new Property(13, String.class, "twelfthClass", false, "twelfthClass");
    };


    public WednesdayTableDao(DaoConfig config) {
        super(config);
    }
    
    public WednesdayTableDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"WEDNESDAY_TABLE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"weekNumber\" INTEGER NOT NULL ," + // 1: weekNumber
                "\"firstClass\" TEXT," + // 2: firstClass
                "\"secondClass\" TEXT," + // 3: sencondClass
                "\"thirdClass\" TEXT," + // 4: thirdClass
                "\"fourthClass\" TEXT," + // 5: fourthClass
                "\"fifthClass\" TEXT," + // 6: fifthClass
                "\"sixthClass\" TEXT," + // 7: sixthClass
                "\"seventhClass\" TEXT," + // 8: seventhClass
                "\"eighthClass\" TEXT," + // 9: eighthClass
                "\"ninthClass\" TEXT," + // 10: ninthClass
                "\"tenthClass\" TEXT," + // 11: tenthClass
                "\"eleventhClasss\" TEXT," + // 12: eleventhClasss
                "\"twelfthClass\" TEXT);"); // 13: twelfthClass
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"WEDNESDAY_TABLE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, WednesdayTable entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getWeekNumber());
 
        String firstClass = entity.getFirstClass();
        if (firstClass != null) {
            stmt.bindString(3, firstClass);
        }
 
        String sencondClass = entity.getSencondClass();
        if (sencondClass != null) {
            stmt.bindString(4, sencondClass);
        }
 
        String thirdClass = entity.getThirdClass();
        if (thirdClass != null) {
            stmt.bindString(5, thirdClass);
        }
 
        String fourthClass = entity.getFourthClass();
        if (fourthClass != null) {
            stmt.bindString(6, fourthClass);
        }
 
        String fifthClass = entity.getFifthClass();
        if (fifthClass != null) {
            stmt.bindString(7, fifthClass);
        }
 
        String sixthClass = entity.getSixthClass();
        if (sixthClass != null) {
            stmt.bindString(8, sixthClass);
        }
 
        String seventhClass = entity.getSeventhClass();
        if (seventhClass != null) {
            stmt.bindString(9, seventhClass);
        }
 
        String eighthClass = entity.getEighthClass();
        if (eighthClass != null) {
            stmt.bindString(10, eighthClass);
        }
 
        String ninthClass = entity.getNinthClass();
        if (ninthClass != null) {
            stmt.bindString(11, ninthClass);
        }
 
        String tenthClass = entity.getTenthClass();
        if (tenthClass != null) {
            stmt.bindString(12, tenthClass);
        }
 
        String eleventhClasss = entity.getEleventhClasss();
        if (eleventhClasss != null) {
            stmt.bindString(13, eleventhClasss);
        }
 
        String twelfthClass = entity.getTwelfthClass();
        if (twelfthClass != null) {
            stmt.bindString(14, twelfthClass);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, WednesdayTable entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getWeekNumber());
 
        String firstClass = entity.getFirstClass();
        if (firstClass != null) {
            stmt.bindString(3, firstClass);
        }
 
        String sencondClass = entity.getSencondClass();
        if (sencondClass != null) {
            stmt.bindString(4, sencondClass);
        }
 
        String thirdClass = entity.getThirdClass();
        if (thirdClass != null) {
            stmt.bindString(5, thirdClass);
        }
 
        String fourthClass = entity.getFourthClass();
        if (fourthClass != null) {
            stmt.bindString(6, fourthClass);
        }
 
        String fifthClass = entity.getFifthClass();
        if (fifthClass != null) {
            stmt.bindString(7, fifthClass);
        }
 
        String sixthClass = entity.getSixthClass();
        if (sixthClass != null) {
            stmt.bindString(8, sixthClass);
        }
 
        String seventhClass = entity.getSeventhClass();
        if (seventhClass != null) {
            stmt.bindString(9, seventhClass);
        }
 
        String eighthClass = entity.getEighthClass();
        if (eighthClass != null) {
            stmt.bindString(10, eighthClass);
        }
 
        String ninthClass = entity.getNinthClass();
        if (ninthClass != null) {
            stmt.bindString(11, ninthClass);
        }
 
        String tenthClass = entity.getTenthClass();
        if (tenthClass != null) {
            stmt.bindString(12, tenthClass);
        }
 
        String eleventhClasss = entity.getEleventhClasss();
        if (eleventhClasss != null) {
            stmt.bindString(13, eleventhClasss);
        }
 
        String twelfthClass = entity.getTwelfthClass();
        if (twelfthClass != null) {
            stmt.bindString(14, twelfthClass);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public WednesdayTable readEntity(Cursor cursor, int offset) {
        WednesdayTable entity = new WednesdayTable( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getInt(offset + 1), // weekNumber
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // firstClass
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // sencondClass
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // thirdClass
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // fourthClass
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // fifthClass
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // sixthClass
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // seventhClass
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // eighthClass
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // ninthClass
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // tenthClass
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // eleventhClasss
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13) // twelfthClass
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, WednesdayTable entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setWeekNumber(cursor.getInt(offset + 1));
        entity.setFirstClass(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setSencondClass(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setThirdClass(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setFourthClass(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setFifthClass(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setSixthClass(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setSeventhClass(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setEighthClass(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setNinthClass(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setTenthClass(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setEleventhClasss(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setTwelfthClass(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(WednesdayTable entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(WednesdayTable entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
